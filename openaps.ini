[alias]
preflight = ! bash -c "rm -rf monitor/clock.json && openaps report invoke monitor/clock.json 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT_OK || (mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT_FAIL; sleep 120; exit 1)"
do-everything-custom = ! bash -c "(openaps preflight && openaps gather && openaps report invoke enact/suggested.json);  mm-format-ns-glucose monitor/glucose.json > nightscout/glucose.json; ns-upload-entries nightscout/glucose.json > nightscout/uploaded-glucose.json"
do-everything = ! bash -c "(openaps preflight && openaps gather && openaps report invoke enact/suggested.json); openaps report-nightscout-full"
upload-treatments = report invoke nightscout/recent-treatments.json nightscout/uploaded.json
report-nightscout = report invoke nightscout/preflight.json nightscout/recent-treatments.json nightscout/uploaded.json nightscout/recent-missing-entries.json nightscout/uploaded-entries.json
run-loop = !bash -c "openaps gather; openaps calculate-action; openaps enact; openaps check-success && openaps status-upload && openaps upload-treatments"
gather = ! bash -c "rm -rf monitor/*; openaps gather-profile && openaps monitor-cgm && ./oref0-mdt-trend.js monitor/glucose_raw.json > monitor/glucose.json; openaps monitor-pump; date; openaps ns-temptargets; openaps format-results"
gather-profile = report invoke settings/settings.json settings/bg_targets_raw.json settings/insulin_sensitivities_raw.json settings/basal_profile.json settings/carb_ratios.json
monitor-cgm = report invoke monitor/glucose_raw.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/reservoir.json monitor/battery.json
format-results = report invoke monitor/glucoseclean.json monitor/glucose-zoned.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/status.json settings/bg_targets.json settings/insulin_sensitivities.json settings/profile.json
calculate-action = report invoke monitor/iob.json monitor/meal.json settings/auto-sens.json enact/suggested.json
enact = ! bash -c "if [ ! -e pause_enact ]; then openaps report invoke enact/enacted.json; else echo \"Paused Enacting\"; echo \"{}\" > enact/enacted.json; fi;"
check-success = ! bash -c "if [ ! -s enact/suggested.json ]; then touch retune; exit 1; fi;"
status-upload = ! bash -c "(if [ ! -s enact/suggested.json ]; then echo '{\"reason\":\"RF Failed\"}' > enact/suggested.json; fi;) && openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
format-ns-glucose = ! bash -c "mm-format-ns-glucose monitor/glucose.json nightscout/glucose.json && cat nightscout/glucose.json | json -C \"this.name != 'Fokko-07'\" | json -C \"this.name != 'DataEnd'\" | json -C \"this.name.indexOf('Something') == -1\"  | json -C \"this.name.indexOf('Could Not') == -1\" | json -C \"this.name.indexOf('SensorWeak') == -1\" | json -C \"typeof this.sgv == \"undefined\" || this.sgv != 0\" > nightscout/glucoseclean.json"
select-records = ! bash -c "openaps use ns shell lsgaps tz entries |  openaps use tz select --current now --date dateString --gaps - nightscout/glucoseclean.json > nightscout/recent-missing-entries.json"
upload-glucose = ! bash -c "echo 'Format glucose'; openaps format-ns-glucose; openaps select-records; echo 'upload-entries'; openaps report invoke nightscout/uploaded-entries.json"
ns-temptargets = ! bash -c "(curl -m 30 -s \"$NIGHTSCOUT_HOST/api/v1/treatments.json?find\[created_at\]\[\$gte\]=`date -d \"6 hours ago\" -Iminutes`&find\[eventType\]=Temporary+Target\" > settings/temptargets.json)"

[report "nightscout/recent-treatments.json"]
oper = format-recent-history-treatments
use = shell
reporter = JSON
device = ns
remainder = monitor/pumphistory-zoned.json model.json
json_default = True

[report "nightscout/uploaded.json"]
oper = upload-non-empty-treatments
use = shell
reporter = JSON
device = ns
remainder = nightscout/recent-treatments.json
json_default = True

[report "nightscout/recent-missing-entries.json"]
oper = format-recent-type
use = shell
reporter = JSON
device = ns
remainder = tz entries monitor/glucose.json
json_default = True

[report "nightscout/uploaded-entries.json"]
oper = upload-non-empty-type
use = shell
reporter = JSON
device = ns
remainder = entries.json nightscout/recent-missing-entries.json
json_default = True

[report "nightscout/preflight.json"]
oper = preflight
use = shell
reporter = JSON
device = ns
remainder = 
json_default = True

[device "veo"]
vendor = openaps.vendors.medtronic
extra = veo.ini

[report "last_four_pump_hours.json"]
device = veo2
hours = 4.0
use = iter_pump_hours
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = veo2
use = read_settings
reporter = JSON

[report "settings/bg_targets_raw.json"]
device = veo2
use = read_bg_targets
reporter = JSON

[device "units"]
vendor = openaps.vendors.units
extra = units.ini

[report "settings/bg_targets.json"]
device = units
to = mg/dL
use = bg_targets
input = settings/bg_targets_raw.json
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = units
to = mg/dL
use = insulin_sensitivities
input = settings/insulin_sensitivities_raw.json
reporter = JSON

[report "settings/insulin_sensitivities_raw.json"]
device = veo2
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal_profile.json"]
device = veo2
use = read_basal_profile_std
reporter = JSON

[report "settings/carb_ratios.json"]
device = veo2
use = read_carb_ratios
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
device = get-profile
remainder = settings/carb_ratios.json settings/temptargets.json --model model.json
insulin_sensitivities = settings/insulin_sensitivities.json

[report "monitor/pumphistory.json"]
device = veo2
hours = 28.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = veo2
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock.json
reporter = JSON
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = 

[report "monitor/temp_basal.json"]
device = veo2
use = read_temp_basal
reporter = JSON

[report "monitor/glucose_raw.json"]
device = veo2
count = 288
use = iter_glucose
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = --auto-sens settings/auto-sens.json monitor/meal.json
iob = monitor/iob.json
glucose = monitor/glucose-zoned.json

[vendor "openapscontrib.glucosetools"]
path = .
module = openapscontrib.glucosetools

[device "glucose"]
vendor = openapscontrib.glucosetools
extra = glucose.ini

[report "monitor/glucoseclean.json"]
device = glucose
use = clean
infile = monitor/glucose.json
reporter = JSON

[report "model.json"]
device = veo2
use = model
reporter = JSON

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = --uploader uploader.json mmtune.json
iob = monitor/iob.json
enacted = enact/enacted.json

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = BST

[report "monitor/reservoir.json"]
device = veo2
use = reservoir
reporter = JSON

[report "monitor/battery.json"]
device = veo2
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = veo2
use = status
reporter = JSON

[report "enact/enacted.json"]
device = veo2
use = set_temp_basal
reporter = JSON
input = enact/suggested.json

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = BST

[report "monitor/glucose-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = display_time
adjust = missing
input = monitor/glucoseclean.json
device = tz
timezone = BST

[device "auto-sense"]
vendor = openaps.vendors.process
extra = auto-sense.ini

[report "settings/pumphistory-24h.json"]
device = veo2
hours = 28.0
use = iter_pump_hours
reporter = JSON

[report "settings/auto-sens.json"]
profile = settings/profile.json
use = shell
reporter = text
basal_profile = settings/basal_profile.json
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = auto-sense
insulin_sensitivities = settings/insulin_sensitivities.json
remainder = 
glucose = monitor/glucose-zoned.json

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[device "meal"]
vendor = openaps.vendors.process
extra = meal.ini

[report "monitor/meal.json"]
carbs = 
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pumphistory = monitor/pumphistory-zoned.json
basal = settings/basal_profile.json
device = meal
remainder = 
profile = settings/profile.json
glucose = monitor/glucose-zoned.json

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "veo2"]
vendor = mmeowlink.vendors.mmeowlink
extra = veo2.ini

[device "loopPump"]
vendor = mmeowlink.vendors.mmeowlink
extra = loopPump.ini

